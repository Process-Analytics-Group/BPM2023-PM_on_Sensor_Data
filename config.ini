[DEFAULT]
# column names in file for sensor label, timestamp and status
file_column_name_sensor_label = SensorID
file_column_name_timestamp = DateTime
file_column_name_status = Active
# number of times the process model discovery gets executed
number_of_runs = 200
# the way in which the result of an iteration is evaluated. (possible metrics: "Precision", "Fitness", "entropia:Precision", "entropia:Fitness", "F1")
metric_to_be_maximised = F1
# row limit for input_data (set to -1 or a number above the number of rows if there is no limit)
max_number_of_raw_input = -1
# define how the non numeric part of the different sensor types look like. An entry in the dictionary has the following
# pattern: ""<sensor_type>": "<prefix>""
# Only the motion sensors are currently taken into account.
motion_sensor_prefix = M

# Specifies the linkage method for clustering with custom distance calculation. (possible methods: "single", "complete", "average", "weighted", "median", "centroid", "ward")
linkage_method_for_clustering = ward
# threshold for filtering out sensors in dfg relative to max occurrences of a sensor (value in range 0-1)
rel_proportion_dfg_threshold = 0.5
# miner used for process model creation (possible miners: heuristic, inductive)
miner_type = heuristic
# Program execution type - Choose between the possible types:
# "fixed_params" (the parameters are set before the program is executed),
# "param_optimization" (uses a search space in which the parameters are optimized during execution)
execution_type = param_optimization


[hyperopt_params]
# # # # # # # # # # # # Hyperparameter Search # # # # # # # # # # # #
# how is the path of a person through the environment split
#    "FixedSensorActivations": only count how many sensors are being activated
#    "FixedActivationTime": Count the time between first and last activation in a trace
#    "RoomsSimple": Split the traces when the person leaves a certain area (rooms)
trace_partition_method = ["FixedSensorActivations", "FixedActivationTime", "RoomsSimple"]

# range for number of sensor activations per trace
number_of_activations_per_trace_min = 5
number_of_activations_per_trace_max = 50
number_of_activations_per_trace_step_length = 5

# range for number of cumulated sensor duration time per trace
trace_duration_min = 120
trace_duration_max = 1800
trace_duration_step_length = 120

# set distance for zero to other sensors
# used in creation of the distance_matrix_real_world matrix
zero_distance_value_min = 1
zero_distance_value_max = 1

# number of clusters
hyp_min_number_clusters = 6
hyp_max_number_clusters = 20

# range for vectorization type
# possible types: "quantity", "time", "quantity_time"
vectorization_type_list = ["quantity", "time", "quantity_time"]

# # Routines
# separate the day into various segments
# 1: No segmentation
# 2: 0-12: Am, 12-23: PM
# 3: 0-8: Night, 8-16: Day, 16-23: Evening
# 4: 0-6: Night, 6-12: Morning, 12-18: Afternoon, 18-24: Night
# 5: 5-10: Morning, 10-14: Noon, 14-17: Afternoon, 17-23:Evening, 23-5:Night
hyp_number_of_day_partitions_list = [1, 2, 3, 4, 5]

# differentiate between different days of the week
# weekday: differentiates between all days of the week (Mo, Tue, Wed, Thu, Fri, Sat, Sun)
# workday: differentiates between workdays and weekend
# none: no day differentiation
# possible values: ["weekday", "workday", "none"]
hyp_week_separator_list = ["weekday", "workday", "none"]

# range for clustering method (parameter optimization)
# possible methods: "sklearn-SOM", "k-Means", "k-Medoids"
clustering_method_list = ["sklearn-SOM", "k-Means", "k-Medoids"]


[fixed_params]
# # # # # # # # # # # # fixed params execution parameters # # # # # # # # # # # #
# use fixed parameters for testing
zero_distance_value = 1
traces_time_out_threshold = 300
trace_length_limit = 6
custom_distance_number_of_clusters = 10
distance_threshold = 1.2
max_errors_per_day = 100
vectorization_type = quantity_time
event_case_correlation_method = Classic
clustering_method = sklearn-SOM
hyp_number_of_day_partitions = 3
hyp_week_separator = workday